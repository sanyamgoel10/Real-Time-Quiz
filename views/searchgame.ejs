<html>
    <head>
        <title>
            Real-Time Quiz
        </title>
    </head>
    <body>
        <h1>Real-Time Quiz</h1>
        <p id="ShowMessage">
            Please wait, while we are searching for a quiz game for you.....
        </p>
        <!-- <div id="questionContainer" style="display: none;">
            <p id="questionText"></p>
            <div id="options"></div>
            <button onclick="submitAnswer()">Submit Answer</button>
        </div> -->
        <p>
            <button onclick="window.location.href='/logout'">Logout</button>
        </p>
    </body>
</html>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io(`http://${window.location.host}`);

    socket.on('connect', () => {
        console.log(`Connected to server with socket ID: ${socket.id}`);

        // Emit 'StartGame' event to the server with the username
        socket.emit('StartGame', {
            username: "<%=userName%>",
        });
    });

    // // Handle 'JoinRoom' event from the server
    // socket.on('JoinRoom', (data) => {
    //     // Display the room ID and update the UI
    //     $('#ShowMessage').html(`You have been matched into a game with Room ID: ${data.roomId}`);

    //     // Optionally, you can add more UI updates or logic here
    //     console.log(`Joined room: ${data.roomId}`);
    // });

    // // Handle 'NewQuestion' event from the server
    // socket.on('NewQuestion', (data) => {
    //     console.log('New Question:', data);
    //     currentQuestion = data;

    //     // Update the UI to show the new question
    //     $('#questionText').text(`Question ${data.questionNumber}: ${data.question.questionText}`);
    //     $('#options').empty();
    //     data.question.options.forEach((option, index) => {
    //         $('#options').append(`<button onclick="selectAnswer(${index})">${option}</button>`);
    //     });

    //     // Show the question container
    //     $('#questionContainer').show();
    // });

    // // Handle 'GameStarted' event from the server
    // socket.on('GameStarted', (data) => {
    //     console.log('Game started:', data);
    //     $('#ShowMessage').html(`Game started! Question: ${data.question}`);
    // });

    // // Handle 'GameEnded' event from the server
    // socket.on('GameEnded', (data) => {
    //     console.log('Game ended:', data);
    //     $('#ShowMessage').html(`Game ended! Winner: ${data.winner}`);
    //     $('#questionContainer').hide(); // Hide the question container
    // });

    // Handle disconnection event
    socket.on('disconnect', () => {
        console.log('Disconnected from server');
        $('#ShowMessage').html('Disconnected from the server. Please refresh the page.');
    });

    // Handle errors
    socket.on('error', (error) => {
        console.error('Socket error:', error);
        $('#ShowMessage').html(`Error: ${error.message}`);
    });
</script>